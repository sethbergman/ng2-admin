{"version":3,"file":"5.chunk.js","sources":["webpack:///./src/app/pages/components/components.module.ts","webpack:///delegated ./node_modules/rxjs/Rx.js from dll-reference vendor_lib?c410","webpack:///./~/ng2-tree/src/draggable/node-draggable.service.js","webpack:///./~/ng2-tree/src/menu/node-menu.service.js","webpack:///./src/app/pages/components/components.component.ts","webpack:///./src/app/pages/components/components/treeView/treeView.component.ts","webpack:///./~/ng2-tree/src/editable/editable.type.js","webpack:///./~/ng2-tree/src/menu/menu.types.js","webpack:///./~/ng2-tree/src/tree.component.js","webpack:///./~/ng2-tree/src/tree.service.js","webpack:///./~/ng2-tree/src/utils/event.utils.js","webpack:///./src/app/pages/components/components.routing.ts","webpack:///./~/ng2-tree/index.js","webpack:///./~/ng2-tree/src/draggable/captured-node.js","webpack:///./~/ng2-tree/src/draggable/draggable.types.js","webpack:///./~/ng2-tree/src/draggable/node-draggable.directive.js","webpack:///./~/ng2-tree/src/editable/node-editable.directive.js","webpack:///./~/ng2-tree/src/menu/node-menu.component.js","webpack:///./~/ng2-tree/src/tree.module.js","webpack:///./~/ng2-tree/src/tree.types.js","webpack:///./~/ng2-tree/src/utils/type.utils.js","webpack:///./src/app/pages/components/components/treeView/treeView.html"],"sourcesContent":["import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgaModule } from '../../theme/nga.module';\nimport { TreeModule } from 'ng2-tree';\n\nimport { routing }       from './components.routing';\nimport { Components } from './components.component';\nimport { TreeView } from './components/treeView/treeView.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgaModule,\n    TreeModule,\n    routing\n  ],\n  declarations: [\n    Components,\n    TreeView,\n  ]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components.module.ts","module.exports = (__webpack_require__(5))(443);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/rxjs/Rx.js from dll-reference vendor_lib\n// module id = 500\n// module chunks = 2 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Rx_1 = require('rxjs/Rx');\nvar NodeDraggableService = (function () {\n    function NodeDraggableService() {\n        this.draggableNodeEvents$ = new Rx_1.Subject();\n    }\n    NodeDraggableService.prototype.captureNode = function (node) {\n        this.capturedNode = node;\n    };\n    NodeDraggableService.prototype.getCapturedNode = function () {\n        return this.capturedNode;\n    };\n    NodeDraggableService.prototype.releaseCapturedNode = function () {\n        this.capturedNode = null;\n    };\n    NodeDraggableService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    NodeDraggableService.ctorParameters = function () { return []; };\n    return NodeDraggableService;\n}());\nexports.NodeDraggableService = NodeDraggableService;\n//# sourceMappingURL=node-draggable.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/node-draggable.service.js\n// module id = 585\n// module chunks = 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar Rx_1 = require('rxjs/Rx');\nvar NodeMenuService = (function () {\n    function NodeMenuService() {\n        this.nodeMenuEvents$ = new Rx_1.Subject();\n    }\n    NodeMenuService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    NodeMenuService.ctorParameters = function () { return []; };\n    return NodeMenuService;\n}());\nexports.NodeMenuService = NodeMenuService;\n//# sourceMappingURL=node-menu.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/menu/node-menu.service.js\n// module id = 586\n// module chunks = 5","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'components',\n  template: `<router-outlet></router-outlet>`\n})\nexport class Components {\n\n  constructor() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components.component.ts","import {Component} from '@angular/core';\nimport {TreeModel} from 'ng2-tree';\n\n@Component({\n  selector: 'tree-view',\n  template: require('./treeView.html'),\n})\n\nexport class TreeView {\n\n  tree: TreeModel = {\n    value: 'Programming languages by programming paradigm',\n    children: [\n      {\n        value: 'Object-oriented programming',\n        children: [\n          {value: 'Java'},\n          {value: 'C++'},\n          {value: 'C#'},\n        ]\n      },\n      {\n        value: 'Prototype-based programming',\n        children: [\n          {value: 'JavaScript'},\n          {value: 'CoffeeScript'},\n          {value: 'Lua'},\n        ]\n      }\n    ]\n  };\n\n  constructor() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components/treeView/treeView.component.ts","\"use strict\";\n(function (NodeEditableEventAction) {\n    NodeEditableEventAction[NodeEditableEventAction[\"Cancel\"] = 0] = \"Cancel\";\n})(exports.NodeEditableEventAction || (exports.NodeEditableEventAction = {}));\nvar NodeEditableEventAction = exports.NodeEditableEventAction;\n//# sourceMappingURL=editable.type.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/editable/editable.type.js\n// module id = 642\n// module chunks = 5","\"use strict\";\n(function (NodeMenuItemAction) {\n    NodeMenuItemAction[NodeMenuItemAction[\"NewFolder\"] = 0] = \"NewFolder\";\n    NodeMenuItemAction[NodeMenuItemAction[\"NewTag\"] = 1] = \"NewTag\";\n    NodeMenuItemAction[NodeMenuItemAction[\"Rename\"] = 2] = \"Rename\";\n    NodeMenuItemAction[NodeMenuItemAction[\"Remove\"] = 3] = \"Remove\";\n})(exports.NodeMenuItemAction || (exports.NodeMenuItemAction = {}));\nvar NodeMenuItemAction = exports.NodeMenuItemAction;\n(function (NodeMenuAction) {\n    NodeMenuAction[NodeMenuAction[\"Close\"] = 0] = \"Close\";\n})(exports.NodeMenuAction || (exports.NodeMenuAction = {}));\nvar NodeMenuAction = exports.NodeMenuAction;\n//# sourceMappingURL=menu.types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/menu/menu.types.js\n// module id = 643\n// module chunks = 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar tree_types_1 = require('./tree.types');\nvar node_draggable_service_1 = require('./draggable/node-draggable.service');\nvar node_menu_service_1 = require('./menu/node-menu.service');\nvar draggable_types_1 = require('./draggable/draggable.types');\nvar menu_types_1 = require('./menu/menu.types');\nvar editable_type_1 = require('./editable/editable.type');\nvar tree_service_1 = require('./tree.service');\nvar event_utils_1 = require('./utils/event.utils');\nvar _ = require('lodash');\nvar type_utils_1 = require('./utils/type.utils');\nvar TreeInternalComponent = (function () {\n    function TreeInternalComponent(nodeMenuService, nodeDraggableService, treeService, element) {\n        this.nodeMenuService = nodeMenuService;\n        this.nodeDraggableService = nodeDraggableService;\n        this.treeService = treeService;\n        this.element = element;\n        this.nodeRemoved = new core_1.EventEmitter();\n        this.isSelected = false;\n        this.isMenuVisible = false;\n    }\n    TreeInternalComponent.prototype.ngOnInit = function () {\n        this.indexInParent = 0;\n        this.tree._indexInParent = this.indexInParent;\n        this.isLeaf = !Array.isArray(this.tree.children);\n        this.tree.options = tree_types_1.TreeModelOptions.merge(this.tree, this.parentTree);\n        this.setUpNodeSelectedEventHandler();\n        this.setUpMenuEventHandler();\n        this.setUpDraggableEventHandler();\n    };\n    TreeInternalComponent.prototype.setUpNodeSelectedEventHandler = function () {\n        var _this = this;\n        this.treeService.nodeSelected$\n            .filter(function (e) { return _this.tree !== e.node; })\n            .subscribe(function () { return _this.isSelected = false; });\n    };\n    TreeInternalComponent.prototype.setUpMenuEventHandler = function () {\n        var _this = this;\n        this.nodeMenuService.nodeMenuEvents$\n            .filter(function (e) { return _this.element.nativeElement !== e.sender; })\n            .filter(function (e) { return e.action === menu_types_1.NodeMenuAction.Close; })\n            .subscribe(function () { return _this.isMenuVisible = false; });\n    };\n    TreeInternalComponent.prototype.setUpDraggableEventHandler = function () {\n        var _this = this;\n        this.nodeDraggableService.draggableNodeEvents$\n            .filter(function (e) { return e.action === draggable_types_1.NodeDraggableEventAction.Remove; })\n            .filter(function (e) { return e.captured.element === _this.element; })\n            .subscribe(function (e) { return _this.onChildRemoved({ node: e.captured.tree }, _this.parentTree); });\n        this.nodeDraggableService.draggableNodeEvents$\n            .filter(function (e) { return e.action !== draggable_types_1.NodeDraggableEventAction.Remove; })\n            .filter(function (e) { return e.target === _this.element; })\n            .filter(function (e) { return !_this.hasChild(e.captured.tree); })\n            .subscribe(function (e) {\n            if (_this.isSiblingOf(e.captured.tree)) {\n                return _this.swapWithSibling(e.captured.tree);\n            }\n            if (_this.isFolder()) {\n                return _this.moveNodeToThisTreeAndRemoveFromPreviousOne(e);\n            }\n            else {\n                return _this.moveNodeToParentTreeAndRemoveFromPreviousOne(e);\n            }\n        });\n    };\n    TreeInternalComponent.prototype.moveNodeToThisTreeAndRemoveFromPreviousOne = function (e) {\n        this.tree.children.push(e.captured.tree);\n        this.nodeDraggableService.draggableNodeEvents$.next(_.merge(e, { action: draggable_types_1.NodeDraggableEventAction.Remove }));\n        this.treeService.nodeMoved$.next({\n            node: e.captured.tree,\n            parent: this.tree\n        });\n    };\n    TreeInternalComponent.prototype.moveNodeToParentTreeAndRemoveFromPreviousOne = function (e) {\n        this.parentTree.children.splice(this.indexInParent, 0, e.captured.tree);\n        this.nodeDraggableService.draggableNodeEvents$.next(_.merge(e, { action: draggable_types_1.NodeDraggableEventAction.Remove }));\n        this.treeService.nodeMoved$.next({\n            node: e.captured.tree,\n            parent: this.parentTree\n        });\n    };\n    TreeInternalComponent.prototype.isEditInProgress = function () {\n        return this.tree._status === tree_types_1.TreeStatus.EditInProgress\n            || this.tree._status === tree_types_1.TreeStatus.New;\n    };\n    TreeInternalComponent.prototype.isFolder = function () {\n        return !this.isLeaf;\n    };\n    TreeInternalComponent.prototype.hasChild = function (child) {\n        return _.includes(this.tree.children, child);\n    };\n    TreeInternalComponent.prototype.isSiblingOf = function (child) {\n        return this.parentTree && _.includes(this.parentTree.children, child);\n    };\n    TreeInternalComponent.prototype.swapWithSibling = function (sibling) {\n        var siblingIndex = this.parentTree.children.indexOf(sibling);\n        var thisTreeIndex = this.parentTree.children.indexOf(this.tree);\n        this.parentTree.children[siblingIndex] = this.tree;\n        this.parentTree.children[thisTreeIndex] = sibling;\n        this.tree._indexInParent = siblingIndex;\n        sibling._indexInParent = thisTreeIndex;\n        this.treeService.nodeMoved$.next({\n            node: this.tree,\n            parent: this.parentTree\n        });\n    };\n    TreeInternalComponent.prototype.isNodeExpanded = function () {\n        return this.tree._foldingType === tree_types_1.FoldingType.Expanded;\n    };\n    TreeInternalComponent.prototype.switchFoldingType = function (e, tree) {\n        this.handleFoldingType(e.target.parentNode.parentNode, tree);\n    };\n    TreeInternalComponent.prototype.getFoldingTypeCssClass = function (node) {\n        if (!node._foldingType) {\n            if (node.children) {\n                node._foldingType = tree_types_1.FoldingType.Expanded;\n            }\n            else {\n                node._foldingType = tree_types_1.FoldingType.Leaf;\n            }\n        }\n        return node._foldingType.cssClass;\n    };\n    TreeInternalComponent.prototype.getNextFoldingType = function (node) {\n        if (node._foldingType === tree_types_1.FoldingType.Expanded) {\n            return tree_types_1.FoldingType.Collapsed;\n        }\n        return tree_types_1.FoldingType.Expanded;\n    };\n    TreeInternalComponent.prototype.handleFoldingType = function (parent, node) {\n        if (node._foldingType === tree_types_1.FoldingType.Leaf) {\n            return;\n        }\n        node._foldingType = this.getNextFoldingType(node);\n    };\n    TreeInternalComponent.prototype.onMenuItemSelected = function (e) {\n        switch (e.nodeMenuItemAction) {\n            case menu_types_1.NodeMenuItemAction.NewTag:\n                this.onNewSelected(e);\n                break;\n            case menu_types_1.NodeMenuItemAction.NewFolder:\n                this.onNewSelected(e);\n                break;\n            case menu_types_1.NodeMenuItemAction.Rename:\n                this.onRenameSelected();\n                break;\n            case menu_types_1.NodeMenuItemAction.Remove:\n                this.onRemoveSelected();\n                break;\n            default:\n                throw new Error(\"Chosen menu item doesn't exist\");\n        }\n    };\n    TreeInternalComponent.prototype.onRenameSelected = function () {\n        this.tree._status = tree_types_1.TreeStatus.EditInProgress;\n        this.isMenuVisible = false;\n    };\n    TreeInternalComponent.prototype.onRemoveSelected = function () {\n        this.treeService.nodeRemoved$.next({\n            node: this.tree,\n            parent: this.parentTree\n        });\n        this.nodeRemoved.emit({ node: this.tree });\n    };\n    TreeInternalComponent.prototype.onNewSelected = function (e) {\n        if (!this.tree.children || !this.tree.children.push) {\n            this.tree.children = [];\n        }\n        var newNode = { value: '', _status: tree_types_1.TreeStatus.New };\n        if (e.nodeMenuItemAction === menu_types_1.NodeMenuItemAction.NewFolder) {\n            newNode.children = [];\n        }\n        this.isLeaf ? this.parentTree.children.push(newNode) : this.tree.children.push(newNode);\n        this.isMenuVisible = false;\n    };\n    TreeInternalComponent.prototype.onChildRemoved = function (e, parent) {\n        if (parent === void 0) { parent = this.tree; }\n        var childIndex = _.findIndex(parent.children, function (child) { return child === e.node; });\n        if (childIndex >= 0) {\n            parent.children.splice(childIndex, 1);\n        }\n    };\n    TreeInternalComponent.prototype.showMenu = function (e) {\n        if (this.tree.options.static) {\n            return;\n        }\n        if (event_utils_1.isRightButtonClicked(e)) {\n            this.isMenuVisible = !this.isMenuVisible;\n            this.nodeMenuService.nodeMenuEvents$.next({\n                sender: this.element.nativeElement,\n                action: menu_types_1.NodeMenuAction.Close\n            });\n        }\n        e.preventDefault();\n    };\n    TreeInternalComponent.prototype.applyNewValue = function (e, node) {\n        if (e.action === editable_type_1.NodeEditableEventAction.Cancel) {\n            if (type_utils_1.isValueEmpty(e.value)) {\n                return this.nodeRemoved.emit({ node: this.tree });\n            }\n            node._status = tree_types_1.TreeStatus.Modified;\n            return;\n        }\n        if (type_utils_1.isValueEmpty(e.value)) {\n            return;\n        }\n        var nodeOldValue = node.value;\n        if (type_utils_1.isRenamable(node.value)) {\n            node.value = type_utils_1.applyNewValueToRenamable(node.value, e.value);\n        }\n        else {\n            node.value = e.value;\n        }\n        if (node._status === tree_types_1.TreeStatus.New) {\n            this.treeService.nodeCreated$.next({ node: node, parent: this.parentTree });\n        }\n        if (node._status === tree_types_1.TreeStatus.EditInProgress) {\n            this.treeService.nodeRenamed$.next({\n                node: node,\n                parent: this.parentTree,\n                oldValue: nodeOldValue,\n                newValue: node.value\n            });\n        }\n        node._status = tree_types_1.TreeStatus.Modified;\n    };\n    TreeInternalComponent.prototype.onNodeSelected = function (e) {\n        if (event_utils_1.isLeftButtonClicked(e)) {\n            this.isSelected = true;\n            this.treeService.nodeSelected$.next({ node: this.tree });\n        }\n    };\n    TreeInternalComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'tree-internal',\n                    template: \"\\n  <ul class=\\\"tree\\\" *ngIf=\\\"tree\\\">\\n    <li>\\n      <div (contextmenu)=\\\"showMenu($event)\\\" [nodeDraggable]=\\\"element\\\" [tree]=\\\"tree\\\">\\n        <div class=\\\"folding\\\" (click)=\\\"switchFoldingType($event, tree)\\\" [ngClass]=\\\"getFoldingTypeCssClass(tree)\\\"></div>\\n        <div href=\\\"#\\\" class=\\\"node-value\\\" *ngIf=\\\"!isEditInProgress()\\\" [class.node-selected]=\\\"isSelected\\\" (click)=\\\"onNodeSelected($event)\\\">{{tree.value}}</div>\\n\\n        <input type=\\\"text\\\" class=\\\"node-value\\\" *ngIf=\\\"isEditInProgress()\\\"\\n               [nodeEditable]=\\\"tree.value\\\"\\n               (valueChanged)=\\\"applyNewValue($event, tree)\\\"/>\\n      </div>\\n\\n      <node-menu *ngIf=\\\"isMenuVisible\\\" (menuItemSelected)=\\\"onMenuItemSelected($event)\\\"></node-menu>\\n\\n      <template [ngIf]=\\\"isNodeExpanded()\\\">\\n        <tree-internal *ngFor=\\\"let child of tree.children; let position = index\\\"\\n              [parentTree]=\\\"tree\\\"\\n              [indexInParent]=\\\"position\\\"\\n              [tree]=\\\"child\\\"\\n              (nodeRemoved)=\\\"onChildRemoved($event)\\\"></tree-internal>\\n      </template>\\n    </li>\\n  </ul>\\n  \"\n                },] },\n    ];\n    TreeInternalComponent.ctorParameters = function () { return [\n        { type: node_menu_service_1.NodeMenuService, decorators: [{ type: core_1.Inject, args: [node_menu_service_1.NodeMenuService,] },] },\n        { type: node_draggable_service_1.NodeDraggableService, decorators: [{ type: core_1.Inject, args: [node_draggable_service_1.NodeDraggableService,] },] },\n        { type: tree_service_1.TreeService, decorators: [{ type: core_1.Inject, args: [tree_service_1.TreeService,] },] },\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n    ]; };\n    TreeInternalComponent.propDecorators = {\n        'tree': [{ type: core_1.Input },],\n        'parentTree': [{ type: core_1.Input },],\n        'indexInParent': [{ type: core_1.Input },],\n        'nodeRemoved': [{ type: core_1.Output },],\n    };\n    return TreeInternalComponent;\n}());\nexports.TreeInternalComponent = TreeInternalComponent;\nvar TreeComponent = (function () {\n    function TreeComponent(treeService) {\n        this.treeService = treeService;\n        this.nodeCreated = new core_1.EventEmitter();\n        this.nodeRemoved = new core_1.EventEmitter();\n        this.nodeRenamed = new core_1.EventEmitter();\n        this.nodeSelected = new core_1.EventEmitter();\n        this.nodeMoved = new core_1.EventEmitter();\n    }\n    TreeComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.treeService.nodeRemoved$.subscribe(function (e) {\n            _this.nodeRemoved.emit(e);\n        });\n        this.treeService.nodeRenamed$.subscribe(function (e) {\n            _this.nodeRenamed.emit(e);\n        });\n        this.treeService.nodeCreated$.subscribe(function (e) {\n            _this.nodeCreated.emit(e);\n        });\n        this.treeService.nodeSelected$.subscribe(function (e) {\n            _this.nodeSelected.emit(e);\n        });\n        this.treeService.nodeMoved$.subscribe(function (e) {\n            _this.nodeMoved.emit(e);\n        });\n    };\n    TreeComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'tree',\n                    template: \"<tree-internal [tree]=\\\"tree\\\"></tree-internal>\",\n                    providers: [tree_service_1.TreeService]\n                },] },\n    ];\n    TreeComponent.ctorParameters = function () { return [\n        { type: tree_service_1.TreeService, decorators: [{ type: core_1.Inject, args: [tree_service_1.TreeService,] },] },\n    ]; };\n    TreeComponent.propDecorators = {\n        'tree': [{ type: core_1.Input },],\n        'nodeCreated': [{ type: core_1.Output },],\n        'nodeRemoved': [{ type: core_1.Output },],\n        'nodeRenamed': [{ type: core_1.Output },],\n        'nodeSelected': [{ type: core_1.Output },],\n        'nodeMoved': [{ type: core_1.Output },],\n    };\n    return TreeComponent;\n}());\nexports.TreeComponent = TreeComponent;\n//# sourceMappingURL=tree.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.component.js\n// module id = 644\n// module chunks = 5","\"use strict\";\nvar Rx_1 = require('rxjs/Rx');\nvar core_1 = require('@angular/core');\nvar TreeService = (function () {\n    function TreeService() {\n        this.nodeMoved$ = new Rx_1.Subject();\n        this.nodeRemoved$ = new Rx_1.Subject();\n        this.nodeRenamed$ = new Rx_1.Subject();\n        this.nodeCreated$ = new Rx_1.Subject();\n        this.nodeSelected$ = new Rx_1.Subject();\n    }\n    TreeService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    TreeService.ctorParameters = function () { return []; };\n    return TreeService;\n}());\nexports.TreeService = TreeService;\n//# sourceMappingURL=tree.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.service.js\n// module id = 645\n// module chunks = 5","\"use strict\";\nfunction isLeftButtonClicked(e) {\n    return e.button === MouseButtons.Left;\n}\nexports.isLeftButtonClicked = isLeftButtonClicked;\nfunction isRightButtonClicked(e) {\n    return e.button === MouseButtons.Right;\n}\nexports.isRightButtonClicked = isRightButtonClicked;\nfunction isEscapePressed(e) {\n    return e.keyCode === Keys.Escape;\n}\nexports.isEscapePressed = isEscapePressed;\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n})(Keys || (Keys = {}));\nvar MouseButtons;\n(function (MouseButtons) {\n    MouseButtons[MouseButtons[\"Left\"] = 0] = \"Left\";\n    MouseButtons[MouseButtons[\"Right\"] = 2] = \"Right\";\n})(MouseButtons || (MouseButtons = {}));\n//# sourceMappingURL=event.utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/utils/event.utils.js\n// module id = 646\n// module chunks = 5","import { Routes, RouterModule }  from '@angular/router';\n\nimport { Components } from './components.component';\nimport { TreeView } from './components/treeView/treeView.component';\n\n// noinspection TypeScriptValidateTypes\nconst routes: Routes = [\n  {\n    path: '',\n    component: Components,\n    children: [\n      { path: 'treeview', component: TreeView }\n    ]\n  }\n];\n\nexport const routing = RouterModule.forChild(routes);\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./src/app/pages/components/components.routing.ts","\"use strict\";\nvar tree_component_1 = require('./src/tree.component');\nexports.TreeComponent = tree_component_1.TreeComponent;\nvar tree_module_1 = require('./src/tree.module');\nexports.TreeModule = tree_module_1.TreeModule;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/index.js\n// module id = 755\n// module chunks = 5","\"use strict\";\nvar CapturedNode = (function () {\n    function CapturedNode(anElement, aTree) {\n        this.anElement = anElement;\n        this.aTree = aTree;\n    }\n    CapturedNode.prototype.canBeDroppedAt = function (element) {\n        return !this.sameAs(element) && !this.contains(element);\n    };\n    CapturedNode.prototype.contains = function (other) {\n        return this.element.nativeElement.contains(other.nativeElement);\n    };\n    CapturedNode.prototype.sameAs = function (other) {\n        return this.element === other;\n    };\n    Object.defineProperty(CapturedNode.prototype, \"element\", {\n        get: function () {\n            return this.anElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CapturedNode.prototype, \"tree\", {\n        get: function () {\n            return this.aTree;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CapturedNode;\n}());\nexports.CapturedNode = CapturedNode;\n//# sourceMappingURL=captured-node.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/captured-node.js\n// module id = 756\n// module chunks = 5","\"use strict\";\n(function (NodeDraggableEventAction) {\n    NodeDraggableEventAction[NodeDraggableEventAction[\"Remove\"] = 0] = \"Remove\";\n})(exports.NodeDraggableEventAction || (exports.NodeDraggableEventAction = {}));\nvar NodeDraggableEventAction = exports.NodeDraggableEventAction;\n//# sourceMappingURL=draggable.types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/draggable.types.js\n// module id = 757\n// module chunks = 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar node_draggable_service_1 = require('./node-draggable.service');\nvar captured_node_1 = require('./captured-node');\nvar NodeDraggableDirective = (function () {\n    function NodeDraggableDirective(element, nodeDraggableService, renderer) {\n        this.element = element;\n        this.nodeDraggableService = nodeDraggableService;\n        this.renderer = renderer;\n        this.disposersForDragListeners = [];\n        this.nodeNativeElement = element.nativeElement;\n    }\n    NodeDraggableDirective.prototype.ngOnInit = function () {\n        if (!this.tree.options.static) {\n            this.renderer.setElementAttribute(this.nodeNativeElement, 'draggable', 'true');\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragenter', this.handleDragEnter.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragover', this.handleDragOver.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragstart', this.handleDragStart.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragleave', this.handleDragLeave.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'drop', this.handleDrop.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragend', this.handleDragEnd.bind(this)));\n        }\n    };\n    NodeDraggableDirective.prototype.ngOnDestroy = function () {\n        this.disposersForDragListeners.forEach(function (dispose) { return dispose(); });\n    };\n    NodeDraggableDirective.prototype.handleDragStart = function (e) {\n        e.stopPropagation();\n        this.nodeDraggableService.captureNode(new captured_node_1.CapturedNode(this.nodeDraggable, this.tree));\n        e.dataTransfer.setData('text', NodeDraggableDirective.DATA_TRANSFER_STUB_DATA);\n        e.dataTransfer.effectAllowed = 'move';\n    };\n    NodeDraggableDirective.prototype.handleDragOver = function (e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n    };\n    NodeDraggableDirective.prototype.handleDragEnter = function (e) {\n        e.preventDefault();\n        if (this.containsElementAt(e)) {\n            this.addClass('over-drop-target');\n        }\n    };\n    NodeDraggableDirective.prototype.handleDragLeave = function (e) {\n        if (!this.containsElementAt(e)) {\n            this.removeClass('over-drop-target');\n        }\n    };\n    NodeDraggableDirective.prototype.handleDrop = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.removeClass('over-drop-target');\n        if (!this.isDropPossible(e)) {\n            return false;\n        }\n        if (this.nodeDraggableService.getCapturedNode()) {\n            return this.notifyThatNodeWasDropped();\n        }\n    };\n    NodeDraggableDirective.prototype.isDropPossible = function (e) {\n        var capturedNode = this.nodeDraggableService.getCapturedNode();\n        return capturedNode\n            && capturedNode.canBeDroppedAt(this.nodeDraggable)\n            && this.containsElementAt(e);\n    };\n    NodeDraggableDirective.prototype.handleDragEnd = function (e) {\n        this.removeClass('over-drop-target');\n        this.nodeDraggableService.releaseCapturedNode();\n    };\n    NodeDraggableDirective.prototype.containsElementAt = function (e) {\n        var _a = e.x, x = _a === void 0 ? e.clientX : _a, _b = e.y, y = _b === void 0 ? e.clientY : _b;\n        return this.nodeNativeElement.contains(document.elementFromPoint(x, y));\n    };\n    NodeDraggableDirective.prototype.addClass = function (className) {\n        var classList = this.nodeNativeElement.classList;\n        classList.add(className);\n    };\n    NodeDraggableDirective.prototype.removeClass = function (className) {\n        var classList = this.nodeNativeElement.classList;\n        classList.remove(className);\n    };\n    NodeDraggableDirective.prototype.notifyThatNodeWasDropped = function () {\n        var event = {\n            captured: this.nodeDraggableService.getCapturedNode(),\n            target: this.nodeDraggable\n        };\n        this.nodeDraggableService.draggableNodeEvents$.next(event);\n    };\n    NodeDraggableDirective.DATA_TRANSFER_STUB_DATA = 'some browsers enable drag-n-drop only when dataTransfer has data';\n    NodeDraggableDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[nodeDraggable]'\n                },] },\n    ];\n    NodeDraggableDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n        { type: node_draggable_service_1.NodeDraggableService, decorators: [{ type: core_1.Inject, args: [node_draggable_service_1.NodeDraggableService,] },] },\n        { type: core_1.Renderer, decorators: [{ type: core_1.Inject, args: [core_1.Renderer,] },] },\n    ]; };\n    NodeDraggableDirective.propDecorators = {\n        'nodeDraggable': [{ type: core_1.Input },],\n        'tree': [{ type: core_1.Input },],\n    };\n    return NodeDraggableDirective;\n}());\nexports.NodeDraggableDirective = NodeDraggableDirective;\n//# sourceMappingURL=node-draggable.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/draggable/node-draggable.directive.js\n// module id = 758\n// module chunks = 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar editable_type_1 = require('./editable.type');\nvar NodeEditableDirective = (function () {\n    function NodeEditableDirective(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.valueChanged = new core_1.EventEmitter(false);\n    }\n    NodeEditableDirective.prototype.ngOnInit = function () {\n        var nativeElement = this.elementRef.nativeElement;\n        this.renderer.invokeElementMethod(nativeElement, 'focus', []);\n        this.renderer.setElementProperty(nativeElement, 'value', this.nodeValue);\n    };\n    NodeEditableDirective.prototype.applyNewValue = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'keyup', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.applyNewValueByLoosingFocus = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'blur', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.cancelEditing = function () {\n        this.valueChanged.emit({\n            type: 'keyup',\n            value: this.nodeValue,\n            action: editable_type_1.NodeEditableEventAction.Cancel\n        });\n    };\n    NodeEditableDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[nodeEditable]'\n                },] },\n    ];\n    NodeEditableDirective.ctorParameters = function () { return [\n        { type: core_1.Renderer, decorators: [{ type: core_1.Inject, args: [core_1.Renderer,] },] },\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n    ]; };\n    NodeEditableDirective.propDecorators = {\n        'nodeValue': [{ type: core_1.Input, args: ['nodeEditable',] },],\n        'valueChanged': [{ type: core_1.Output },],\n        'applyNewValue': [{ type: core_1.HostListener, args: ['keyup.enter', ['$event.target.value'],] },],\n        'applyNewValueByLoosingFocus': [{ type: core_1.HostListener, args: ['blur', ['$event.target.value'],] },],\n        'cancelEditing': [{ type: core_1.HostListener, args: ['keyup.esc',] },],\n    };\n    return NodeEditableDirective;\n}());\nexports.NodeEditableDirective = NodeEditableDirective;\n//# sourceMappingURL=node-editable.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/editable/node-editable.directive.js\n// module id = 759\n// module chunks = 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar node_menu_service_1 = require('./node-menu.service');\nvar menu_types_1 = require('./menu.types');\nvar event_utils_1 = require('../utils/event.utils');\nvar NodeMenuComponent = (function () {\n    function NodeMenuComponent(renderer, nodeMenuService) {\n        this.renderer = renderer;\n        this.nodeMenuService = nodeMenuService;\n        this.menuItemSelected = new core_1.EventEmitter();\n        this.availableMenuItems = [\n            {\n                name: 'New tag',\n                action: menu_types_1.NodeMenuItemAction.NewTag,\n                cssClass: 'new-tag'\n            },\n            {\n                name: 'New folder',\n                action: menu_types_1.NodeMenuItemAction.NewFolder,\n                cssClass: 'new-folder'\n            },\n            {\n                name: 'Rename',\n                action: menu_types_1.NodeMenuItemAction.Rename,\n                cssClass: 'rename'\n            },\n            {\n                name: 'Remove',\n                action: menu_types_1.NodeMenuItemAction.Remove,\n                cssClass: 'remove'\n            }\n        ];\n        this.disposersForGlobalListeners = [];\n    }\n    NodeMenuComponent.prototype.ngOnInit = function () {\n        this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'keyup', this.closeMenu.bind(this)));\n        this.disposersForGlobalListeners.push(this.renderer.listenGlobal('document', 'click', this.closeMenu.bind(this)));\n    };\n    NodeMenuComponent.prototype.ngOnDestroy = function () {\n        this.disposersForGlobalListeners.forEach(function (dispose) { return dispose(); });\n    };\n    NodeMenuComponent.prototype.onMenuItemSelected = function (e, selectedMenuItem) {\n        if (event_utils_1.isLeftButtonClicked(e)) {\n            this.menuItemSelected.emit({ nodeMenuItemAction: selectedMenuItem.action });\n        }\n    };\n    NodeMenuComponent.prototype.closeMenu = function (e) {\n        var mouseClicked = e instanceof MouseEvent;\n        var escapePressed = e instanceof KeyboardEvent && event_utils_1.isEscapePressed(e);\n        if (escapePressed || mouseClicked) {\n            var nodeMenuEvent = {\n                sender: e.target,\n                action: menu_types_1.NodeMenuAction.Close\n            };\n            this.nodeMenuService.nodeMenuEvents$.next(nodeMenuEvent);\n        }\n    };\n    NodeMenuComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'node-menu',\n                    template: \"\\n    <div class=\\\"node-menu\\\">\\n      <ul class=\\\"node-menu-content\\\">\\n        <li class=\\\"node-menu-item\\\" *ngFor=\\\"let menuItem of availableMenuItems\\\"\\n            (click)=\\\"onMenuItemSelected($event, menuItem)\\\">\\n          <div class=\\\"node-menu-item-icon {{menuItem.cssClass}}\\\"></div>\\n          <span class=\\\"node-menu-item-value\\\">{{menuItem.name}}</span>\\n        </li>\\n      </ul>\\n    </div>\\n  \"\n                },] },\n    ];\n    NodeMenuComponent.ctorParameters = function () { return [\n        { type: core_1.Renderer, decorators: [{ type: core_1.Inject, args: [core_1.Renderer,] },] },\n        { type: node_menu_service_1.NodeMenuService, decorators: [{ type: core_1.Inject, args: [node_menu_service_1.NodeMenuService,] },] },\n    ]; };\n    NodeMenuComponent.propDecorators = {\n        'menuItemSelected': [{ type: core_1.Output },],\n    };\n    return NodeMenuComponent;\n}());\nexports.NodeMenuComponent = NodeMenuComponent;\n//# sourceMappingURL=node-menu.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/menu/node-menu.component.js\n// module id = 760\n// module chunks = 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar tree_component_1 = require('./tree.component');\nvar common_1 = require('@angular/common');\nvar node_draggable_directive_1 = require('./draggable/node-draggable.directive');\nvar node_draggable_service_1 = require('./draggable/node-draggable.service');\nvar node_editable_directive_1 = require('./editable/node-editable.directive');\nvar node_menu_component_1 = require('./menu/node-menu.component');\nvar node_menu_service_1 = require('./menu/node-menu.service');\nvar tree_service_1 = require('./tree.service');\nvar TreeModule = (function () {\n    function TreeModule() {\n    }\n    TreeModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [common_1.CommonModule],\n                    declarations: [node_draggable_directive_1.NodeDraggableDirective, tree_component_1.TreeComponent, node_editable_directive_1.NodeEditableDirective, node_menu_component_1.NodeMenuComponent, tree_component_1.TreeInternalComponent],\n                    exports: [tree_component_1.TreeComponent],\n                    providers: [node_draggable_service_1.NodeDraggableService, node_menu_service_1.NodeMenuService, tree_service_1.TreeService]\n                },] },\n    ];\n    TreeModule.ctorParameters = function () { return []; };\n    return TreeModule;\n}());\nexports.TreeModule = TreeModule;\n//# sourceMappingURL=tree.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.module.js\n// module id = 761\n// module chunks = 5","\"use strict\";\nvar _ = require('lodash');\nvar FoldingType = (function () {\n    function FoldingType(_cssClass) {\n        this._cssClass = _cssClass;\n    }\n    Object.defineProperty(FoldingType.prototype, \"cssClass\", {\n        get: function () {\n            return this._cssClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FoldingType.Expanded = new FoldingType('node-expanded');\n    FoldingType.Collapsed = new FoldingType('node-collapsed');\n    FoldingType.Leaf = new FoldingType('node-leaf');\n    return FoldingType;\n}());\nexports.FoldingType = FoldingType;\nvar TreeModelOptions = (function () {\n    function TreeModelOptions() {\n        this.static = false;\n    }\n    TreeModelOptions.merge = function (sourceA, sourceB) {\n        return _.defaults({}, _.get(sourceA, 'options'), _.get(sourceB, 'options'), { static: false });\n    };\n    return TreeModelOptions;\n}());\nexports.TreeModelOptions = TreeModelOptions;\n(function (TreeStatus) {\n    TreeStatus[TreeStatus[\"New\"] = 0] = \"New\";\n    TreeStatus[TreeStatus[\"Modified\"] = 1] = \"Modified\";\n    TreeStatus[TreeStatus[\"EditInProgress\"] = 2] = \"EditInProgress\";\n})(exports.TreeStatus || (exports.TreeStatus = {}));\nvar TreeStatus = exports.TreeStatus;\n//# sourceMappingURL=tree.types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/tree.types.js\n// module id = 762\n// module chunks = 5","\"use strict\";\nvar _ = require('lodash');\nfunction applyNewValueToRenamable(value, newValue) {\n    var renamableValue = _.merge({}, value);\n    renamableValue.setName(newValue);\n    return renamableValue;\n}\nexports.applyNewValueToRenamable = applyNewValueToRenamable;\nfunction isValueEmpty(value) {\n    return _.isEmpty(_.trim(value));\n}\nexports.isValueEmpty = isValueEmpty;\nfunction isRenamable(value) {\n    return value.setName !== undefined;\n}\nexports.isRenamable = isRenamable;\n//# sourceMappingURL=type.utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-tree/src/utils/type.utils.js\n// module id = 763\n// module chunks = 5","module.exports = \"<div class=\\\"col-md-6\\\">\\n  <ba-card title=\\\"basic\\\">\\n    <tree id=\\\"tree-view\\\" [tree]=\\\"tree\\\"></tree>\\n  </ba-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/components/components/treeView/treeView.html\n// module id = 797\n// module chunks = 5"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;ACvBA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACdA;AAMA;AAEA;AACA;AAEA;AAAA;AALA;AAJA;AACA;AACA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;ACNA;AAQA;AAwBA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AA3BA;AALA;AACA;AACA;AACA;;AAEA;AAAA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;;;;","sourceRoot":""}