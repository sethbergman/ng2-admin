/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require("../../../../../../src/app/theme/components/baMenu/baMenu.component");
var import1 = require("@angular/core/src/change_detection/change_detection_util");
var import2 = require("@angular/core/src/linker/view");
var import3 = require("@angular/core/src/linker/view_utils");
var import5 = require("@angular/core/src/metadata/view");
var import6 = require("@angular/core/src/linker/view_type");
var import7 = require("@angular/core/src/change_detection/constants");
var import8 = require("@angular/core/src/linker/component_factory");
var import9 = require("@angular/router/src/router");
var import10 = require("../../../../../../src/app/theme/services/baMenu/baMenu.service");
var import11 = require("../../../../../../src/app/global.state");
var import12 = require("../../../../../../src/app/theme/components/baMenu/components/baMenuItem/baMenuItem.component");
var import13 = require("./components/baMenuItem/baMenuItem.component.ngfactory");
var import14 = require("@angular/core/src/linker/view_container");
var import15 = require("../../directives/baSlimScroll/baSlimScroll.directive.ngfactory");
var import16 = require("../../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory");
var import17 = require("../../../../../node_modules/@angular/common/src/directives/ng_class.ngfactory");
var import18 = require("../../../../../node_modules/@angular/common/src/directives/ng_style.ngfactory");
var import19 = require("@angular/core/src/linker/element_ref");
var import20 = require("@angular/core/src/linker/template_ref");
var import21 = require("@angular/core/src/change_detection/differs/iterable_differs");
var import22 = require("@angular/core/src/change_detection/differs/keyvalue_differs");
var import23 = require("@angular/common/src/directives/ng_for");
var import24 = require("../../../../../../src/app/theme/directives/baSlimScroll/baSlimScroll.directive");
var import25 = require("@angular/common/src/directives/ng_class");
var import26 = require("@angular/common/src/directives/ng_style");
var Wrapper_BaMenu = (function () {
    function Wrapper_BaMenu(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.BaMenu(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_BaMenu.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_BaMenu.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_BaMenu.prototype.check_sidebarCollapsed = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.sidebarCollapsed = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_BaMenu.prototype.check_menuHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.menuHeight = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_BaMenu.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_BaMenu.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_BaMenu.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_BaMenu.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.expandMenu.subscribe(_eventHandler.bind(view, 'expandMenu')));
        }
    };
    return Wrapper_BaMenu;
}());
exports.Wrapper_BaMenu = Wrapper_BaMenu;
var renderType_BaMenu_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_BaMenu_Host0 = (function (_super) {
    __extends(View_BaMenu_Host0, _super);
    function View_BaMenu_Host0(viewUtils, parentView, parentIndex, parentElement) {
        return _super.call(this, View_BaMenu_Host0, renderType_BaMenu_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways) || this;
    }
    View_BaMenu_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'ba-menu', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_BaMenu0(this.viewUtils, this, 0, this._el_0);
        this._BaMenu_0_3 = new Wrapper_BaMenu(this.injectorGet(import9.Router, this.parentIndex), this.injectorGet(import10.BaMenuService, this.parentIndex), this.injectorGet(import11.GlobalState, this.parentIndex));
        this.compView_0.create(this._BaMenu_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._BaMenu_0_3.context);
    };
    View_BaMenu_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.BaMenu) && (0 === requestNodeIndex))) {
            return this._BaMenu_0_3.context;
        }
        return notFoundResult;
    };
    View_BaMenu_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._BaMenu_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_BaMenu_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._BaMenu_0_3.ngOnDestroy();
    };
    View_BaMenu_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_BaMenu_Host0;
}(import2.AppView));
exports.BaMenuNgFactory = new import8.ComponentFactory('ba-menu', View_BaMenu_Host0, import0.BaMenu);
var styles_BaMenu = [];
var View_BaMenu1 = (function (_super) {
    __extends(View_BaMenu1, _super);
    function View_BaMenu1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        return _super.call(this, View_BaMenu1, renderType_BaMenu, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer) || this;
    }
    View_BaMenu1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'ba-menu-item', import3.EMPTY_INLINE_ARRAY, null);
        this.compView_0 = new import13.View_BaMenuItem0(this.viewUtils, this, 0, this._el_0);
        this._BaMenuItem_0_3 = new import13.Wrapper_BaMenuItem();
        this.compView_0.create(this._BaMenuItem_0_3.context);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray4(4, 'itemHover', null, 'toggleSubMenu', null), this.eventHandler(this.handleEvent_0));
        this._BaMenuItem_0_3.subscribe(this, this.eventHandler(this.handleEvent_0), true, true);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), [disposable_0]);
        return null;
    };
    View_BaMenu1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.BaMenuItem) && (0 === requestNodeIndex))) {
            return this._BaMenuItem_0_3.context;
        }
        return notFoundResult;
    };
    View_BaMenu1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0_0_0 = this.context.$implicit;
        this._BaMenuItem_0_3.check_menuItem(currVal_0_0_0, throwOnChange, false);
        this._BaMenuItem_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_BaMenu1.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._BaMenuItem_0_3.ngOnDestroy();
    };
    View_BaMenu1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_BaMenu1.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'itemHover')) {
            var pd_sub_0 = (this.parentView.context.hoverItem($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'toggleSubMenu')) {
            var pd_sub_1 = (this.parentView.context.toggleSubMenu($event) !== false);
            result = (pd_sub_1 && result);
        }
        return result;
    };
    return View_BaMenu1;
}(import2.AppView));
var renderType_BaMenu = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_BaMenu, {});
var View_BaMenu0 = (function (_super) {
    __extends(View_BaMenu0, _super);
    function View_BaMenu0(viewUtils, parentView, parentIndex, parentElement) {
        var _this = _super.call(this, View_BaMenu0, renderType_BaMenu, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways) || this;
        _this._map_16 = import3.pureProxy1(function (p0) {
            return { height: p0 };
        });
        _this._map_17 = import3.pureProxy1(function (p0) {
            return { 'show-hover-elem': p0 };
        });
        _this._map_18 = import3.pureProxy2(function (p0, p1) {
            return {
                top: p0,
                height: p1
            };
        });
        return _this;
    }
    View_BaMenu0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'aside', new import3.InlineArray4(4, 'class', 'al-sidebar', 'sidebarResize', ''), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'ul', new import3.InlineArray8(6, 'baSlimScroll', '', 'class', 'al-sidebar-list', 'id', 'al-sidebar-list'), null);
        this._BaSlimScroll_2_3 = new import15.Wrapper_BaSlimScroll(new import19.ElementRef(this._el_2));
        this._text_3 = this.renderer.createText(this._el_2, '\n    ', null);
        this._anchor_4 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._vc_4 = new import14.ViewContainer(4, 2, this, this._anchor_4);
        this._TemplateRef_4_5 = new import20.TemplateRef_(this, 4, this._anchor_4);
        this._NgFor_4_6 = new import16.Wrapper_NgFor(this._vc_4.vcRef, this._TemplateRef_4_5, this.parentView.injectorGet(import21.IterableDiffers, this.parentIndex), this.ref);
        this._text_5 = this.renderer.createText(this._el_2, '\n  ', null);
        this._text_6 = this.renderer.createText(this._el_0, '\n  ', null);
        this._el_7 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'sidebar-hover-elem'), null);
        this._NgClass_7_3 = new import17.Wrapper_NgClass(this.parentView.injectorGet(import21.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import22.KeyValueDiffers, this.parentIndex), new import19.ElementRef(this._el_7), this.renderer);
        this._NgStyle_7_4 = new import18.Wrapper_NgStyle(this.parentView.injectorGet(import22.KeyValueDiffers, this.parentIndex), new import19.ElementRef(this._el_7), this.renderer);
        this._text_8 = this.renderer.createText(this._el_0, '\n', null);
        this._text_9 = this.renderer.createText(parentRenderNode, '\n', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_0, new import3.InlineArray2(2, 'mouseleave', null), this.eventHandler(this.handleEvent_0));
        this.init(null, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._anchor_4,
            this._text_5,
            this._text_6,
            this._el_7,
            this._text_8,
            this._text_9
        ]), [disposable_0]);
        return null;
    };
    View_BaMenu0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import20.TemplateRef) && (4 === requestNodeIndex))) {
            return this._TemplateRef_4_5;
        }
        if (((token === import23.NgFor) && (4 === requestNodeIndex))) {
            return this._NgFor_4_6.context;
        }
        if (((token === import24.BaSlimScroll) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 5)))) {
            return this._BaSlimScroll_2_3.context;
        }
        if (((token === import25.NgClass) && (7 === requestNodeIndex))) {
            return this._NgClass_7_3.context;
        }
        if (((token === import26.NgStyle) && (7 === requestNodeIndex))) {
            return this._NgStyle_7_4.context;
        }
        return notFoundResult;
    };
    View_BaMenu0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this._map_16(this.context.menuHeight);
        this._BaSlimScroll_2_3.check_baSlimScrollOptions(currVal_2_0_0, throwOnChange, false);
        this._BaSlimScroll_2_3.ngDoCheck(this, this._el_2, throwOnChange);
        var currVal_4_0_0 = this.context.menuItems;
        this._NgFor_4_6.check_ngForOf(currVal_4_0_0, throwOnChange, false);
        this._NgFor_4_6.ngDoCheck(this, this._anchor_4, throwOnChange);
        var currVal_7_0_0 = 'sidebar-hover-elem';
        this._NgClass_7_3.check_klass(currVal_7_0_0, throwOnChange, false);
        var currVal_7_0_1 = this._map_17(this.context.showHoverElem);
        this._NgClass_7_3.check_ngClass(currVal_7_0_1, throwOnChange, false);
        this._NgClass_7_3.ngDoCheck(this, this._el_7, throwOnChange);
        var currVal_7_1_0 = this._map_18((this.context.hoverElemTop + 'px'), (this.context.hoverElemHeight + 'px'));
        this._NgStyle_7_4.check_ngStyle(currVal_7_1_0, throwOnChange, false);
        this._NgStyle_7_4.ngDoCheck(this, this._el_7, throwOnChange);
        this._vc_4.detectChangesInNestedViews(throwOnChange);
    };
    View_BaMenu0.prototype.destroyInternal = function () {
        this._vc_4.destroyNestedViews();
    };
    View_BaMenu0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 4)) {
            return new View_BaMenu1(this.viewUtils, this, 4, this._anchor_4, this._vc_4);
        }
        return null;
    };
    View_BaMenu0.prototype.handleEvent_0 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'mouseleave')) {
            var pd_sub_0 = ((this.context.hoverElemTop = this.context.outOfArea) !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    return View_BaMenu0;
}(import2.AppView));
exports.View_BaMenu0 = View_BaMenu0;
//# sourceMappingURL=baMenu.component.ngfactory.js.map