/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var import0 = require("../../../../../../src/app/theme/directives/baScrollPosition/baScrollPosition.directive");
var import1 = require("@angular/core/src/change_detection/change_detection_util");
var import3 = require("@angular/core/src/linker/view_utils");
var Wrapper_BaScrollPosition = (function () {
    function Wrapper_BaScrollPosition() {
        this._changed = false;
        this.context = new import0.BaScrollPosition();
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_BaScrollPosition.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_BaScrollPosition.prototype.ngOnDestroy = function () {
        (this.subscription0 && this.subscription0.unsubscribe());
    };
    Wrapper_BaScrollPosition.prototype.check_maxHeight = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.maxHeight = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_BaScrollPosition.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_BaScrollPosition.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_BaScrollPosition.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        if ((eventName == 'window:scroll')) {
            var pd_sub_0 = (this.context.onWindowScroll() !== false);
            result = (pd_sub_0 && result);
        }
        return result;
    };
    Wrapper_BaScrollPosition.prototype.subscribe = function (view, _eventHandler, emit0) {
        this._eventHandler = _eventHandler;
        if (emit0) {
            (this.subscription0 = this.context.scrollChange.subscribe(_eventHandler.bind(view, 'scrollChange')));
        }
    };
    return Wrapper_BaScrollPosition;
}());
exports.Wrapper_BaScrollPosition = Wrapper_BaScrollPosition;
//# sourceMappingURL=baScrollPosition.directive.ngfactory.js.map