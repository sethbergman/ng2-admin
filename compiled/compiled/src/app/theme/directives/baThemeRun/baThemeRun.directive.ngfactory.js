/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var import0 = require("../../../../../../src/app/theme/directives/baThemeRun/baThemeRun.directive");
var import1 = require("@angular/core/src/change_detection/change_detection_util");
var import3 = require("@angular/core/src/linker/view_utils");
var Wrapper_BaThemeRun = (function () {
    function Wrapper_BaThemeRun(p0) {
        this._changed = false;
        this.context = new import0.BaThemeRun(p0);
        this._expr_0 = import1.UNINITIALIZED;
    }
    Wrapper_BaThemeRun.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_BaThemeRun.prototype.ngOnDestroy = function () {
    };
    Wrapper_BaThemeRun.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_BaThemeRun.prototype.checkHost = function (view, componentView, el, throwOnChange) {
        var currVal_0 = this.context.classesString;
        if (import3.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            view.renderer.setElementProperty(el, 'className', currVal_0);
            this._expr_0 = currVal_0;
        }
    };
    Wrapper_BaThemeRun.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_BaThemeRun.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_BaThemeRun;
}());
exports.Wrapper_BaThemeRun = Wrapper_BaThemeRun;
//# sourceMappingURL=baThemeRun.directive.ngfactory.js.map